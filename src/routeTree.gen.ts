/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ChatxdImport } from './routes/chatxd'
import { Route as AuthImport } from './routes/auth'
import { Route as ChatImport } from './routes/_chat'
import { Route as ChatIndexImport } from './routes/_chat.index'
import { Route as ChatChatIdImport } from './routes/_chat.$chatId'

// Create/Update Routes

const ChatxdRoute = ChatxdImport.update({
  id: '/chatxd',
  path: '/chatxd',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/_chat',
  getParentRoute: () => rootRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/chatxd': {
      id: '/chatxd'
      path: '/chatxd'
      fullPath: '/chatxd'
      preLoaderRoute: typeof ChatxdImport
      parentRoute: typeof rootRoute
    }
    '/_chat/$chatId': {
      id: '/_chat/$chatId'
      path: '/$chatId'
      fullPath: '/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof ChatImport
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof ChatImport
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatChatIdRoute: typeof ChatChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatChatIdRoute: ChatChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ChatRouteWithChildren
  '/auth': typeof AuthRoute
  '/chatxd': typeof ChatxdRoute
  '/$chatId': typeof ChatChatIdRoute
  '/': typeof ChatIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/chatxd': typeof ChatxdRoute
  '/$chatId': typeof ChatChatIdRoute
  '/': typeof ChatIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_chat': typeof ChatRouteWithChildren
  '/auth': typeof AuthRoute
  '/chatxd': typeof ChatxdRoute
  '/_chat/$chatId': typeof ChatChatIdRoute
  '/_chat/': typeof ChatIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/chatxd' | '/$chatId' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/chatxd' | '/$chatId' | '/'
  id: '__root__' | '/_chat' | '/auth' | '/chatxd' | '/_chat/$chatId' | '/_chat/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ChatRoute: typeof ChatRouteWithChildren
  AuthRoute: typeof AuthRoute
  ChatxdRoute: typeof ChatxdRoute
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRouteWithChildren,
  AuthRoute: AuthRoute,
  ChatxdRoute: ChatxdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_chat",
        "/auth",
        "/chatxd"
      ]
    },
    "/_chat": {
      "filePath": "_chat.tsx",
      "children": [
        "/_chat/$chatId",
        "/_chat/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/chatxd": {
      "filePath": "chatxd.tsx"
    },
    "/_chat/$chatId": {
      "filePath": "_chat.$chatId.tsx",
      "parent": "/_chat"
    },
    "/_chat/": {
      "filePath": "_chat.index.tsx",
      "parent": "/_chat"
    }
  }
}
ROUTE_MANIFEST_END */
